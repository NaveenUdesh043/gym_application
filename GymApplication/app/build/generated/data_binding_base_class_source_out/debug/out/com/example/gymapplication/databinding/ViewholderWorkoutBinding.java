// Generated by view binder compiler. Do not edit!
package com.example.gymapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gymapplication.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ViewholderWorkoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout OtherWorkouts;

  @NonNull
  public final TextView durationTxt;

  @NonNull
  public final TextView exerciseTxt;

  @NonNull
  public final TextView kcalTxt;

  @NonNull
  public final ShapeableImageView pic2;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView titleTxt;

  private ViewholderWorkoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout OtherWorkouts, @NonNull TextView durationTxt,
      @NonNull TextView exerciseTxt, @NonNull TextView kcalTxt, @NonNull ShapeableImageView pic2,
      @NonNull TextView textView15, @NonNull TextView textView17, @NonNull TextView titleTxt) {
    this.rootView = rootView;
    this.OtherWorkouts = OtherWorkouts;
    this.durationTxt = durationTxt;
    this.exerciseTxt = exerciseTxt;
    this.kcalTxt = kcalTxt;
    this.pic2 = pic2;
    this.textView15 = textView15;
    this.textView17 = textView17;
    this.titleTxt = titleTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewholderWorkoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewholderWorkoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.viewholder_workout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewholderWorkoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout OtherWorkouts = (ConstraintLayout) rootView;

      id = R.id.durationTxt;
      TextView durationTxt = ViewBindings.findChildViewById(rootView, id);
      if (durationTxt == null) {
        break missingId;
      }

      id = R.id.exerciseTxt;
      TextView exerciseTxt = ViewBindings.findChildViewById(rootView, id);
      if (exerciseTxt == null) {
        break missingId;
      }

      id = R.id.kcalTxt;
      TextView kcalTxt = ViewBindings.findChildViewById(rootView, id);
      if (kcalTxt == null) {
        break missingId;
      }

      id = R.id.pic2;
      ShapeableImageView pic2 = ViewBindings.findChildViewById(rootView, id);
      if (pic2 == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = ViewBindings.findChildViewById(rootView, id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.titleTxt;
      TextView titleTxt = ViewBindings.findChildViewById(rootView, id);
      if (titleTxt == null) {
        break missingId;
      }

      return new ViewholderWorkoutBinding((ConstraintLayout) rootView, OtherWorkouts, durationTxt,
          exerciseTxt, kcalTxt, pic2, textView15, textView17, titleTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
