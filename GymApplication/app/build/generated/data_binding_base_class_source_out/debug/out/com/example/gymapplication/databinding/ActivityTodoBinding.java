// Generated by view binder compiler. Do not edit!
package com.example.gymapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.gymapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTodoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button addWorkoutButton;

  @NonNull
  public final Button deleteWorkoutButton;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final EditText workoutDurationInput;

  @NonNull
  public final ListView workoutList;

  @NonNull
  public final EditText workoutNameInput;

  @NonNull
  public final TimePicker workoutTimePicker;

  private ActivityTodoBinding(@NonNull RelativeLayout rootView, @NonNull Button addWorkoutButton,
      @NonNull Button deleteWorkoutButton, @NonNull TextView textView18,
      @NonNull EditText workoutDurationInput, @NonNull ListView workoutList,
      @NonNull EditText workoutNameInput, @NonNull TimePicker workoutTimePicker) {
    this.rootView = rootView;
    this.addWorkoutButton = addWorkoutButton;
    this.deleteWorkoutButton = deleteWorkoutButton;
    this.textView18 = textView18;
    this.workoutDurationInput = workoutDurationInput;
    this.workoutList = workoutList;
    this.workoutNameInput = workoutNameInput;
    this.workoutTimePicker = workoutTimePicker;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTodoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTodoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_todo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTodoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_workout_button;
      Button addWorkoutButton = ViewBindings.findChildViewById(rootView, id);
      if (addWorkoutButton == null) {
        break missingId;
      }

      id = R.id.delete_workout_button;
      Button deleteWorkoutButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteWorkoutButton == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.workout_duration_input;
      EditText workoutDurationInput = ViewBindings.findChildViewById(rootView, id);
      if (workoutDurationInput == null) {
        break missingId;
      }

      id = R.id.workout_list;
      ListView workoutList = ViewBindings.findChildViewById(rootView, id);
      if (workoutList == null) {
        break missingId;
      }

      id = R.id.workout_name_input;
      EditText workoutNameInput = ViewBindings.findChildViewById(rootView, id);
      if (workoutNameInput == null) {
        break missingId;
      }

      id = R.id.workout_time_picker;
      TimePicker workoutTimePicker = ViewBindings.findChildViewById(rootView, id);
      if (workoutTimePicker == null) {
        break missingId;
      }

      return new ActivityTodoBinding((RelativeLayout) rootView, addWorkoutButton,
          deleteWorkoutButton, textView18, workoutDurationInput, workoutList, workoutNameInput,
          workoutTimePicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
